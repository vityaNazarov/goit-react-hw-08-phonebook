{"version":3,"file":"static/js/306.1c9aaaa7.chunk.js","mappings":"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","sources":["components/RegisterForm/fields.js","components/RegisterForm/initialState.js","webpack://react-homework-template/./src/components/RegisterForm/register-form.module.css?a013","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://react-homework-template/./src/shared/Button/button.module.scss?cd8f","shared/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/shared/TextField/text-field.module.css?f539","shared/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'User name',\n    placeholder: 'User name',\n  },\n\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__AtyVK\"};","import useForm from 'shared/hooks/useForm';\nimport PropTypes from 'prop-types';\n\nimport TextField from 'shared/TextField/TextField';\nimport Button from 'shared/Button/Button';\n\nimport fields from './fields';\nimport initialState from './initialState';\nimport css from './register-form.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const {name, email, password} = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField value={password} handleChange={handleChange} {...fields.password} />\n      <Button>Register</Button>\n    </form>\n  );\n};\n\nRegisterForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n  };\n  \nexport default RegisterForm;\n","import { useDispatch } from 'react-redux';\n\nimport { register } from '../../redux/auth/auth-operations';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(register(data));\n  };\n\n  return (\n    <div>\n      <h1>Register page</h1>\n      <RegisterForm onSubmit={handleSignup} />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__muzdt\"};","import css from './button.module.scss'\n\nconst Button = ({children, type = \"submit\"}) =>{\n    return <button type={type} className={css.btn}>{children}</button>\n}\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__UiQgu\",\"field\":\"text-field_field__0xPaa\"};","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./text-field.module.css\";\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            <label htmlFor={id}>{label}</label>\n            <input className={styles.field} id={id} onChange={handleChange} {...props} />\n        </div>\n    )\n}\n\nexport default TextField;","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ inititialState, onSubmit }) => {\n  const [state, setState] = useState({ ...inititialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...inititialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["name","type","required","label","placeholder","email","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","css","TextField","value","fields","Button","dispatch","useDispatch","data","register","children","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","styles","htmlFor","onChange","inititialState","useState","setState","useCallback","prevState","e","preventDefault"],"sourceRoot":""}