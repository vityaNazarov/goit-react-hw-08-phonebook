{"version":3,"file":"static/js/840.207035f1.chunk.js","mappings":"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","sources":["components/Phonebook/PhonebookContact/initialState.js","webpack://react-homework-template/./src/components/Phonebook/PhonebookContact/contact-form.module.css?ab55","components/Phonebook/PhonebookContact/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Phonebook/FilterPhonebook/filter-phonebook.module.css?ae89","components/Phonebook/FilterPhonebook/FilterPhonebook.jsx","webpack://react-homework-template/./src/components/Phonebook/Contacts/contact-list.module.css?1934","components/Phonebook/Contacts/ContactList.jsx","webpack://react-homework-template/./src/pages/PhonebookPage/phonebook.module.css?9f47","pages/PhonebookPage/PhonebookPage.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["const initialState = {\n  name: '',\n  number: '',\n  importantContact: false,\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contact-form_wrapper__KizuZ\",\"label\":\"contact-form_label__eDkdO\",\"input\":\"contact-form_input__hOykG\",\"btn\":\"contact-form_btn__H7sX5\",\"checkbox\":\"contact-form_checkbox__b3T3y\"};","import { useState } from 'react';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\n\nimport { useDispatch } from 'react-redux';\n\nimport initialState from './initialState';\nimport css from './contact-form.module.css';\n\nconst ContactForm = () => {\n  const [state, setState] = useState({ ...initialState });\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(fetchAddContact({ ...state }));\n    setState({ ...initialState });\n  };\n\n  const { name, number, newValue, importantContact } = state;\n\n  return (\n    <form className={css.wrapper} onSubmit={handleSubmit}>\n      <label className={css.label}>Name</label>\n      <input\n        className={css.input}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label className={css.label}>Number</label>\n      <input\n        className={css.input}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <label className={css.label}>Important Contact</label>\n      <input\n        className={css.checkbox}\n        name=\"importantContact\"\n        value={newValue}\n        checked={importantContact}\n        type=\"checkbox\"\n        onChange={handleChange}\n      />\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const selectFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperFilter\":\"filter-phonebook_wrapperFilter__vC0a5\",\"labelFilter\":\"filter-phonebook_labelFilter__KzwfD\",\"inputFilter\":\"filter-phonebook_inputFilter__j7DCe\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { selectFilter } from 'redux/filter/filter-selectors';\n\nimport css from './filter-phonebook.module.css';\n\nconst FilterPhonebook = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <form className={css.wrapperFilter}>\n      <label className={css.labelFilter}>Find contacts by name</label>\n      <input\n        value={filter}\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={changeFilter}\n      />\n    </form>\n  );\n};\n\nexport default FilterPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contact-list_contactsList__VBg5-\",\"contactsText\":\"contact-list_contactsText__P+FJA\",\"contactsBtn\":\"contact-list_contactsBtn__zLHx9\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\nimport {\n  selectAllContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/contacts-selectors';\n\nimport css from './contact-list.module.css';\n\nconst ContactList = () => {\n  const filterContacts = useSelector(selectFilteredContacts);\n  const allContacts = useSelector(selectAllContacts);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = payload => {\n    const action = fetchDeleteContact(payload);\n    dispatch(action);\n  };\n\n  const elements = filterContacts.map(\n    ({ id, name, number, importantContact }) => (\n      <li style={{ fontWeight: importantContact ? 'bold' : 'normal' }} key={id}>\n        <span className={css.contactsText}>\n          {name}: {number}\n        </span>\n        <button className={css.contactsBtn} onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    )\n  );\n  const isContacts = Boolean(allContacts.length);\n\n  return (\n    <>\n      <div>\n        <ul className={css.contactsList}>{elements}</ul>\n      </div>\n      {!isContacts && <p>No contacts</p>}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"conteinerPhonebook\":\"phonebook_conteinerPhonebook__bjv-J\",\"text\":\"phonebook_text__MwB4P\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchAllContacts } from 'redux/contacts/contacts-operations';\n\nimport ContactForm from 'components/Phonebook/PhonebookContact/ContactForm';\nimport FilterPhonebook from 'components/Phonebook/FilterPhonebook/FilterPhonebook';\nimport ContactList from 'components/Phonebook/Contacts/ContactList';\n\nimport css from './phonebook.module.css';\n\nconst PhonebookPage = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(fetchAllContacts())\n\t  }, [dispatch]);\n\t\n\t\n  return (\n    <main className={css.conteinerPhonebook}>\n      <ContactForm />\n      <h2 className={css.text}>Contacts</h2>\n      <FilterPhonebook />\n      <ContactList />\n    </main>\n  );\n};\n\nexport default PhonebookPage;\n","export const selectAllContacts = ({ contacts }) => contacts.items;\n\nexport const selectImportantContacts = ({ contacts }) => {\n  const importantContacts = contacts.items.filter(\n    ({ importantContact }) => importantContact\n  );\n  return importantContacts;\n};\n\nexport const selectFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedContact = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedContact) ||\n      number.toLowerCase().includes(normalizedContact)\n    );\n  });\n  return result;\n};\n"],"names":["name","number","importantContact","useState","initialState","state","setState","dispatch","useDispatch","handleChange","target","value","type","checked","newValue","prevState","className","css","onSubmit","evt","preventDefault","fetchAddContact","onChange","pattern","title","required","selectFilter","filter","useSelector","setFilter","filterContacts","selectFilteredContacts","allContacts","selectAllContacts","elements","map","id","style","fontWeight","onClick","payload","action","fetchDeleteContact","onDeleteContact","isContacts","Boolean","length","useEffect","fetchAllContacts","contacts","items","selectImportantContacts","normalizedContact","toLowerCase","includes"],"sourceRoot":""}