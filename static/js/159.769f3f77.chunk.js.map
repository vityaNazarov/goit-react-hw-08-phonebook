{"version":3,"file":"static/js/159.769f3f77.chunk.js","mappings":"qNACA,GAAgB,aAAe,8CAA8C,aAAe,8CAA8C,YAAc,8C,SCuCxJ,EAlC8B,WAC5B,IAAMA,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBC,GAAWC,EAAAA,EAAAA,MAOXC,EAAWL,EAASM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAC5B,gBAAaC,UAAWC,EAAAA,aAAxB,WACE,kBAAMD,UAAWC,EAAAA,aAAjB,UACGH,EADH,KACWC,MAEX,mBACEC,UAAWC,EAAAA,YACXC,QAAS,kBAZa,SAAAC,GAC1B,IAAMC,GAASC,EAAAA,EAAAA,IAAmBF,GAClCV,EAASW,EACV,CASoBE,CAAoBT,EAA1B,EAFX,sBAJOA,EADmB,IAaxBU,EAAaC,QAAQlB,EAASmB,QACpC,OACE,iCACE,0BACE,eAAIT,UAAWC,EAAAA,aAAf,SAAkCN,OAElCY,IAAc,yCAGrB,C,wGCtCM,IAAMG,EAAoB,SAAC,GAAD,SAAGpB,SAAwBqB,KAA3B,EAEpBnB,EAA0B,SAAC,GAItC,OAJuD,EAAfF,SACLqB,MAAMC,QACvC,qBAAGC,gBAAH,GAGH,EAEYC,EAAyB,SAAC,GAA0B,IAAxBxB,EAAuB,EAAvBA,SAAUsB,EAAa,EAAbA,OACjD,IAAKA,EACH,OAAOtB,EAASqB,MAElB,IAAMI,EAAoBH,EAAOI,cAOjC,OANe1B,EAASqB,MAAMC,QAAO,YAAuB,IAApBd,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC5C,OACED,EAAKkB,cAAcC,SAASF,IAC5BhB,EAAOiB,cAAcC,SAASF,EAEjC,GAEF,C","sources":["webpack://react-homework-template/./src/pages/ImportantContactsPage/important-contacts-page.module.css?7245","pages/ImportantContactsPage/ImportantContactsPage.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsItem\":\"important-contacts-page_contactsItem__DlY0K\",\"contactsText\":\"important-contacts-page_contactsText__Vacsn\",\"contactsBtn\":\"important-contacts-page_contactsBtn__O4GrD\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectImportantContacts } from 'redux/contacts/contacts-selectors';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nimport css from './important-contacts-page.module.css';\n\nconst ImportantContactsPage = () => {\n  const contacts = useSelector(selectImportantContacts);\n\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = payload => {\n    const action = fetchDeleteContact(payload);\n    dispatch(action);\n  };\n\n  const elements = contacts.map(({ id, name, number }) => (\n    <li key={id} className={css.contactsItem}>\n      <span className={css.contactsText}>\n        {name}: {number}\n      </span>\n      <button\n        className={css.contactsBtn}\n        onClick={() => handleRemoveContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n  const isContacts = Boolean(contacts.length);\n  return (\n    <>\n      <div>\n        <ul className={css.contactsList}>{elements}</ul>\n      </div>\n      {!isContacts && <p>No contacts</p>}\n    </>\n  );\n};\n\nexport default ImportantContactsPage;\n","export const selectAllContacts = ({ contacts }) => contacts.items;\n\nexport const selectImportantContacts = ({ contacts }) => {\n  const importantContacts = contacts.items.filter(\n    ({ importantContact }) => importantContact\n  );\n  return importantContacts;\n};\n\nexport const selectFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedContact = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedContact) ||\n      number.toLowerCase().includes(normalizedContact)\n    );\n  });\n  return result;\n};\n"],"names":["contacts","useSelector","selectImportantContacts","dispatch","useDispatch","elements","map","id","name","number","className","css","onClick","payload","action","fetchDeleteContact","handleRemoveContact","isContacts","Boolean","length","selectAllContacts","items","filter","importantContact","selectFilteredContacts","normalizedContact","toLowerCase","includes"],"sourceRoot":""}